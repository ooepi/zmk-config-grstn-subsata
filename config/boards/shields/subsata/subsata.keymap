#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>

/ {
    keymap {
        compatible = "zmk,keymap";
        default_layer {
            bindings = <
                &kp ESC   &kp N1    &kp N2    &kp N3    &kp N4    &kp N5    &kp N6    &kp N7    &kp N8    &kp N9    &kp N0    &kp MINUS &kp EQUAL &kp BSPC  &kp HOME  &kp END   &rgb_ug RGB_TOG    &rgb_ug RGB_EFF
                &kp TAB   &kp Q     &kp W     &kp E     &kp R     &kp T     &kp Y     &kp U     &kp I     &kp O     &kp P     &kp LBKT  &kp RBKT  &kp BSLH  &kp DEL   &kp INS   &rgb_ug RGB_HUI    &rgb_ug RGB_BRI
                &kp CAPS  &kp A     &kp S     &kp D     &kp F     &kp G     &kp H     &kp J     &kp K     &kp L     &kp SEMI  &kp APOS  &kp BSLH  &kp RET   &kp PG_UP &kp PG_DN &rgb_ug RGB_HUD    &rgb_ug RGB_BRD
                &kp LSHFT &kp Z     &kp X     &kp C     &kp V     &kp B     &kp N     &kp M     &kp COMMA &kp DOT   &kp FSLH  &kp RSHFT &kp UP    &none     &kp LEFT  &kp RIGHT &rgb_ug RGB_SAI    &none
                &kp LCTRL &kp LGUI  &kp LALT  &trans    &trans    &trans    &kp SPACE &trans    &trans    &trans    &kp RALT  &kp RCTRL &kp DOWN  &kp RSHFT &kp END   &kp HOME  &rgb_ug RGB_SAD    &rgb_ug RGB_EFR
                &kp LCTRL &kp LALT  &kp LGUI  &none     &none     &none     &kp SPACE &none     &none     &none     &kp RALT  &kp RCTRL &kp RGUI  &kp RSHFT &kp LEFT  &kp RIGHT &rgb_ug RGB_SPI    &rgb_ug RGB_SPD
            >;
            
            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };
    };
};

// #include <behaviors.dtsi>
// #include <dt-bindings/zmk/keys.h>
// #include <dt-bindings/zmk/bt.h>
// #include <dt-bindings/zmk/rgb.h>

// / {
//     keymap {
//         compatible = "zmk,keymap";
//         default_layer {
//             bindings = <
//                 &kp ESC   &kp F1    &kp F2    &kp F3    &kp F4    &kp F5    &kp F6    &kp F7    &kp F8    &kp F9    &kp F10   &kp F11   &kp F12   &kp Q     &kp W     &kp E     &kp L   	 &rgb_ug RGB_TOG
//                 &kp L     &kp N1    &kp N2    &kp N3    &kp N4    &kp N5    &kp N6    &kp N7    &kp N8    &kp N9    &kp N0    &kp MINUS &kp EQUAL &kp BSPC  &kp INS   &kp KP_N7 &kp KP_N8    &kp KP_N9
//                 &kp TAB   &kp Q     &kp W     &kp E     &kp R     &kp T     &kp Y     &kp U     &kp I     &kp O     &kp P     &kp LBKT  &kp RBKT  &kp BSLH  &kp DEL   &kp KP_N4 &kp KP_N5    &kp KP_N6
//                 &kp CAPS  &kp A     &kp S     &kp D     &kp F     &kp G     &kp H     &kp J     &kp K     &kp L     &kp SEMI  &kp APOS  &kp RET             &kp HOME  &kp KP_N1 &kp KP_N2    
//                 &kp LSHFT &kp Z     &kp X     &kp C     &kp V     &kp B     &kp N     &kp M     &kp COMMA &kp DOT   &kp FSLH  &kp RSHFT &kp UP    &kp PG_UP &kp END   &kp KP_N0 &kp KP_DOT   &rgb_ug RGB_COLOR_HSB(128,100,100)
//                 &kp LCTRL &kp LGUI  &kp LALT                                &kp SPACE &none                                   &kp RALT  &kp LEFT  &kp DOWN  &kp RIGHT &kp PG_DN &kp KP_N0 &kp KP_ENTER &kp KP_MINUS
//             >;
            
//             sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
//         };
//     };
// };